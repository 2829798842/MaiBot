[inner]
version = "0.0.10"

[mai_version]
version = "0.6.0"
version-fix = "snapshot-1"

#以下是给开发人员阅读的，一般用户不需要阅读
#如果你想要修改配置文件，请在修改后将version的值进行变更
#如果新增项目，请在BotConfig类下新增相应的变量
#1.如果你修改的是[]层级项目，例如你新增了 [memory],那么请在config.py的 load_config函数中的include_configs字典中新增"内容":{
#"func":memory,
#"support":">=0.0.0",  #新的版本号
#"necessary":False      #是否必须
#}
#2.如果你修改的是[]下的项目，例如你新增了[memory]下的 memory_ban_words ,那么请在config.py的 load_config函数中的 memory函数下新增版本判断:
            # if config.INNER_VERSION in SpecifierSet(">=0.0.2"):
            #     config.memory_ban_words = set(memory_config.get("memory_ban_words", []))

[bot]
qq = 2814567326
nickname = "麦麦"
alias_names = ['牢麦', '麦叠', '哈基麦']

[personality]
prompt_personality = ['曾经是一个学习地质的女大学生，现在学习心理学和脑科学，你会刷贴吧', '是一个女大学生，你有黑色头发，你会刷小红书', '是一个女大学生，你会刷b站，对ACG文化感兴趣']
personality_1_probability = 0.7 # 第一种人格出现概率
personality_2_probability = 0.1 # 第二种人格出现概率
personality_3_probability = 0.2 # 第三种人格出现概率，请确保三个概率相加等于1
prompt_schedule = "一个曾经学习地质,现在学习心理学和脑科学的女大学生，喜欢刷qq，贴吧，知乎和小红书"

[message]
min_text_length = 2 # 与麦麦聊天时麦麦只会回答文本大于等于此数的消息
max_context_size = 10 # 麦麦获得的上文数量
emoji_chance = 0.2 # 麦麦使用表情包的概率
thinking_timeout = 100 # 麦麦思考时间

response_willing_amplifier = 1 # 麦麦回复意愿放大系数，一般为1
response_interested_rate_amplifier = 1 # 麦麦回复兴趣度放大系数,听到记忆里的内容时放大系数
down_frequency_rate = 2 # 降低回复频率的群组回复意愿降低系数
ban_words = []

ban_msgs_regex = []

[emoji]
check_interval = 120 # 检查表情包的时间间隔
register_interval = 10 # 注册表情包的时间间隔
auto_save = true  # 自动偷表情包
enable_check = false  # 是否启用表情包过滤
check_prompt = "符合公序良俗" # 表情包过滤要求

[cq_code]
enable_pic_translate = false

[response]
model_r1_probability = 0.5 # 麦麦回答时选择主要回复模型1 模型的概率
model_v3_probability = 0.5 # 麦麦回答时选择次要回复模型2 模型的概率
model_r1_distill_probability = 0 # 麦麦回答时选择次要回复模型3 模型的概率
max_response_length = 1024 # 麦麦回答的最大token数

[willing]
willing_mode = "classical" # 回复意愿模式 经典模式
# willing_mode = "dynamic" # 动态模式(可能不兼容)
# willing_mode = "custom" # 自定义模式（可自行调整

[memory]
build_memory_interval = 3000 # 记忆构建间隔 单位秒   间隔越低，麦麦学习越多，但是冗余信息也会增多
build_memory_distribution = [4, 4, 0.6, 48, 36, 0.4] # 记忆构建分布，参数：分布1均值，标准差，权重，分布2均值，标准差，权重
build_memory_sample_num = 10 # 采样数量，数值越高记忆采样次数越多
build_memory_sample_length = 30 # 采样长度，数值越高一段记忆内容越丰富
memory_compress_rate = 0.1 # 记忆压缩率 控制记忆精简程度 建议保持默认,调高可以获得更多信息，但是冗余信息也会增多

forget_memory_interval = 300 # 记忆遗忘间隔 单位秒   间隔越低，麦麦遗忘越频繁，记忆更精简，但更难学习
memory_forget_time = 24 #多长时间后的记忆会被遗忘 单位小时 
memory_forget_percentage = 0.005 # 记忆遗忘比例 控制记忆遗忘程度 越大遗忘越多 建议保持默认


memory_ban_words = ['表情包', '图片', '回复', '聊天记录']

[mood]
mood_update_interval = 1.0 # 情绪更新间隔 单位秒
mood_decay_rate = 0.95 # 情绪衰减率
mood_intensity_factor = 1.0 # 情绪强度因子

[keywords_reaction] # 针对某个关键词作出反应
enable = true  # 关键词反应功能的总开关

[[keywords_reaction.rules]]
enable = true
keywords = [ "人机", "bot", "机器", "入机", "robot", "机器人",]
reaction = "有人说你是人机或者机器人，否定这一事实，攻击或反问他。注意，只有认为你是机器人才回复，否则不要否认"

[[keywords_reaction.rules]]
enable = false
keywords = [ "测试关键词回复", "test", "",]
reaction = "回答“测试成功”"

[chinese_typo]
enable = true # 是否启用中文错别字生成器
error_rate=0.01 # 单字替换概率
min_freq=7 # 最小字频阈值
tone_error_rate=0.3 # 声调错误概率
word_replace_rate=0.01 # 整词替换概率

[others]
enable_kuuki_read = true # 是否启用读空气功能
enable_friend_chat = true # 是否启用好友聊天

[groups]
talk_allowed = [571780722,1022489779,534940728, 192194125, 851345375, 739044565, 766798517, 1030993430, 435591861, 708847644, 591693379, 571780722, 1028699246, 571780722, 1015816696]  #可以回复消息的群
talk_frequency_down = [1022489779, 571780722]  #降低回复频率的群
ban_user_id = [3488737411, 2732836727, 3878664193, 3799953254]  #禁止回复和读取消息的QQ号

[remote] #发送统计信息，主要是看全球有多少只麦麦
enable = true

#下面的模型若使用硅基流动则不需要更改，使用ds官方则改成.env.prod自定义的宏，使用自定义模型则选择定位相似的模型自己填写

#推理模型

[model.llm_reasoning] #回复模型1 主要回复模型
# name = "Pro/deepseek-ai/DeepSeek-R1"
name = "Qwen/QwQ-32B"
provider = "SILICONFLOW"
pri_in = 1.0 #模型的输入价格（非必填，可以记录消耗）
pri_out = 4.0 #模型的输出价格（非必填，可以记录消耗）

[model.llm_reasoning_minor] #回复模型3 次要回复模型
name = "deepseek-ai/DeepSeek-R1-Distill-Qwen-32B"
provider = "SILICONFLOW"
pri_in = 1.26 #模型的输入价格（非必填，可以记录消耗）
pri_out = 1.26 #模型的输出价格（非必填，可以记录消耗）

#非推理模型

[model.llm_normal] #V3 回复模型2 次要回复模型
name = "Qwen/Qwen2.5-32B-Instruct"
provider = "SILICONFLOW"
pri_in = 1.26 #模型的输入价格（非必填，可以记录消耗）
pri_out = 1.26 #模型的输出价格（非必填，可以记录消耗）

[model.llm_emotion_judge] #表情包判断 
name = "Qwen/Qwen2.5-14B-Instruct"
provider = "SILICONFLOW"
pri_in = 0.7
pri_out = 0.7

[model.llm_topic_judge] #记忆主题判断：建议使用qwen2.5 7b
name = "Pro/Qwen/Qwen2.5-7B-Instruct"
# name = "Qwen/Qwen2-1.5B-Instruct"
provider = "SILICONFLOW"
pri_in = 0.35
pri_out = 0.35

[model.llm_summary_by_topic] #概括模型，建议使用qwen2.5 32b 及以上
name = "Qwen/Qwen2.5-32B-Instruct"
provider = "SILICONFLOW"
pri_in = 1.26
pri_out = 1.26

[model.moderation] #内容审核，开发中
name = ""
provider = "SILICONFLOW"
pri_in = 1.0
pri_out = 2.0

# 识图模型

[model.vlm] #图像识别 
name = "Pro/Qwen/Qwen2.5-VL-7B-Instruct"
provider = "SILICONFLOW"
pri_in = 0.35
pri_out = 0.35

#嵌入模型

[model.embedding] #嵌入
name = "BAAI/bge-m3"
provider = "SILICONFLOW"
